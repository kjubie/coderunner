// <auto-generated />
using System;
using FHTW.CodeRunner.DataAccess.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FHTW.CodeRunner.Migrations.Migrations
{
    [DbContext(typeof(CodeRunnerContext))]
    [Migration("20201213175817_addValidate")]
    partial class addValidate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("FkUserId");

                    b.ToTable("collection");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkCollectionLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_collection_language_id");

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkProgrammingLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_programming_language_id");

                    b.Property<int>("FkWrittenLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_written_language_id");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("version_number");

                    b.HasKey("Id");

                    b.HasIndex("FkCollectionLanguageId");

                    b.HasIndex("FkExerciseId");

                    b.HasIndex("FkProgrammingLanguageId");

                    b.HasIndex("FkWrittenLanguageId");

                    b.ToTable("collection_exercise");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkCollectionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_collection_id");

                    b.Property<string>("FullTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_title");

                    b.Property<string>("Introduction")
                        .HasColumnType("text")
                        .HasColumnName("introduction");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("short_title");

                    b.HasKey("Id");

                    b.HasIndex("FkCollectionId");

                    b.ToTable("collection_language");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkCollectionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_collection_id");

                    b.Property<int>("FkTagId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_tag_id");

                    b.HasKey("Id");

                    b.HasIndex("FkCollectionId");

                    b.HasIndex("FkTagId");

                    b.ToTable("collection_tag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseId");

                    b.HasIndex("FkUserId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Difficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseId");

                    b.HasIndex("FkUserId");

                    b.ToTable("difficulty");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("FkUserId");

                    b.ToTable("exercise");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AllowFiles")
                        .HasColumnType("integer")
                        .HasColumnName("allow_files");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Feedback")
                        .HasColumnType("text")
                        .HasColumnName("feedback");

                    b.Property<int>("FieldLines")
                        .HasColumnType("integer")
                        .HasColumnName("field_lines");

                    b.Property<string>("FilesDescription")
                        .HasColumnType("text")
                        .HasColumnName("files_description");

                    b.Property<string>("FilesRegex")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("files_regex");

                    b.Property<int>("FilesRequired")
                        .HasColumnType("integer")
                        .HasColumnName("files_required");

                    b.Property<int>("FilesSize")
                        .HasColumnType("integer")
                        .HasColumnName("files_size");

                    b.Property<int>("FkExerciseLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_language_id");

                    b.Property<int>("FkProgrammingLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_programming_language_id");

                    b.Property<int>("FkTestSuiteId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_test_suite_id");

                    b.Property<bool>("GradingFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("grading_flag");

                    b.Property<string>("Hint")
                        .HasColumnType("text")
                        .HasColumnName("hint");

                    b.Property<int>("IdNum")
                        .HasColumnType("integer")
                        .HasColumnName("id_num");

                    b.Property<int>("OptainablePoints")
                        .HasColumnType("integer")
                        .HasColumnName("optainable_points");

                    b.Property<string>("Prefill")
                        .HasColumnType("text")
                        .HasColumnName("prefill");

                    b.Property<string>("Solution")
                        .HasColumnType("text")
                        .HasColumnName("solution");

                    b.Property<string>("SubtractSystem")
                        .HasColumnType("text")
                        .HasColumnName("substract_system");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseLanguageId");

                    b.HasIndex("FkProgrammingLanguageId");

                    b.HasIndex("FkTestSuiteId");

                    b.ToTable("exercise_body");

                    b.HasCheckConstraint("value_constraint_exercise_allow_files", "allow_files >= 0 AND allow_files <= 4");

                    b.HasCheckConstraint("value_constraint_exercise_files_required", "files_required >= 0 AND files_required <= 3");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("FullTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_title");

                    b.Property<string>("Introduction")
                        .HasColumnType("text")
                        .HasColumnName("introduction");

                    b.HasKey("Id");

                    b.ToTable("exercise_header");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkExerciseHeaderId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_header_id");

                    b.Property<int>("FkExerciseVersionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_version_id");

                    b.Property<int>("FkWrittenLanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_written_language_id");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseHeaderId");

                    b.HasIndex("FkExerciseVersionId");

                    b.HasIndex("FkWrittenLanguageId");

                    b.ToTable("exercise_language");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkTagId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_tag_id");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseId");

                    b.HasIndex("FkTagId");

                    b.ToTable("exercise_tag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("CreatorDifficulty")
                        .HasColumnType("integer")
                        .HasColumnName("creator_difficulty");

                    b.Property<int?>("CreatorRating")
                        .HasColumnType("integer")
                        .HasColumnName("creator_rating");

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified");

                    b.Property<bool>("ValidFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("valid_flag");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("version_number");

                    b.HasKey("Id");

                    b.HasIndex("FkUserId");

                    b.HasIndex("FkExerciseId", "VersionNumber")
                        .IsUnique();

                    b.ToTable("exercise_version");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("programming_language");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FkExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_exercise_id");

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_user_id");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.HasKey("Id");

                    b.HasIndex("FkExerciseId");

                    b.HasIndex("FkUserId");

                    b.ToTable("rating");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text")
                        .HasColumnName("additional_data");

                    b.Property<string>("DisplayType")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("display_type");

                    b.Property<string>("ExpectedOutput")
                        .HasColumnType("text")
                        .HasColumnName("expected_output");

                    b.Property<int>("FkTestSuiteId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_test_suite_id");

                    b.Property<bool>("HideOnFailFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("hide_on_fail_flag");

                    b.Property<int?>("OrderUsed")
                        .HasColumnType("integer")
                        .HasColumnName("order_used");

                    b.Property<int?>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.Property<string>("StandardInput")
                        .HasColumnType("text")
                        .HasColumnName("standard_input");

                    b.Property<string>("TestCode")
                        .HasColumnType("text")
                        .HasColumnName("test_code");

                    b.Property<bool>("UseAsExampleFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("use_as_example_flag");

                    b.HasKey("Id");

                    b.HasIndex("FkTestSuiteId");

                    b.ToTable("test_case");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.TestSuite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("GlobalExtraParam")
                        .HasColumnType("text")
                        .HasColumnName("global_extra_param");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("question_type");

                    b.Property<string>("RuntimeData")
                        .HasColumnType("text")
                        .HasColumnName("runtime_data");

                    b.Property<bool>("TemplateDebugFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("template_debug_flag");

                    b.Property<string>("TemplateParam")
                        .HasColumnType("text")
                        .HasColumnName("template_param");

                    b.Property<bool>("TemplateParamLiftFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("template_param_lift_flag");

                    b.Property<bool>("TestOnSaveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("test_on_save_flag");

                    b.Property<bool>("TwigAllFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("twig_all_flag");

                    b.HasKey("Id");

                    b.ToTable("test_suite");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("reg_user");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.WrittenLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("written_language");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Collection", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("Collection")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("collection_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionExercise", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.CollectionLanguage", "FkCollectionLanguage")
                        .WithMany("CollectionExercise")
                        .HasForeignKey("FkCollectionLanguageId")
                        .HasConstraintName("collection_exercise_fk_collection_language_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("CollectionExercise")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("collection_exercise_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.ProgrammingLanguage", "FkProgrammingLanguage")
                        .WithMany("CollectionExercise")
                        .HasForeignKey("FkProgrammingLanguageId")
                        .HasConstraintName("collection_exercise_fk_programming_language_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.WrittenLanguage", "FkWrittenLanguage")
                        .WithMany("CollectionExercise")
                        .HasForeignKey("FkWrittenLanguageId")
                        .HasConstraintName("collection_exercise_fk_written_language_id_fkey")
                        .IsRequired();

                    b.Navigation("FkCollectionLanguage");

                    b.Navigation("FkExercise");

                    b.Navigation("FkProgrammingLanguage");

                    b.Navigation("FkWrittenLanguage");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionLanguage", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Collection", "FkCollection")
                        .WithMany("CollectionLanguage")
                        .HasForeignKey("FkCollectionId")
                        .HasConstraintName("collection_language_fk_collection_id_fkey")
                        .IsRequired();

                    b.Navigation("FkCollection");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionTag", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Collection", "FkCollection")
                        .WithMany("CollectionTag")
                        .HasForeignKey("FkCollectionId")
                        .HasConstraintName("collection_tag_fk_collection_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Tag", "FkTag")
                        .WithMany("CollectionTag")
                        .HasForeignKey("FkTagId")
                        .HasConstraintName("collection_tag_fk_tag_id_fkey")
                        .IsRequired();

                    b.Navigation("FkCollection");

                    b.Navigation("FkTag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Comment", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("Comment")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("comment_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("Comment")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("comment_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExercise");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Difficulty", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("Difficulty")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("difficulty_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("Difficulty")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("difficulty_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExercise");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Exercise", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("Exercise")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("exercise_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseBody", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.ExerciseLanguage", "FkExerciseLanguage")
                        .WithMany("ExerciseBody")
                        .HasForeignKey("FkExerciseLanguageId")
                        .HasConstraintName("exercise_body_fk_exercise_language_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.ProgrammingLanguage", "FkProgrammingLanguage")
                        .WithMany("ExerciseBody")
                        .HasForeignKey("FkProgrammingLanguageId")
                        .HasConstraintName("exercise_body_fk_programming_language_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.TestSuite", "FkTestSuite")
                        .WithMany("ExerciseBody")
                        .HasForeignKey("FkTestSuiteId")
                        .HasConstraintName("exercise_body_fk_test_suite_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExerciseLanguage");

                    b.Navigation("FkProgrammingLanguage");

                    b.Navigation("FkTestSuite");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseLanguage", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.ExerciseHeader", "FkExerciseHeader")
                        .WithMany("ExerciseLanguage")
                        .HasForeignKey("FkExerciseHeaderId")
                        .HasConstraintName("exercise_language_fk_exercise_header_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.ExerciseVersion", "FkExerciseVersion")
                        .WithMany("ExerciseLanguage")
                        .HasForeignKey("FkExerciseVersionId")
                        .HasConstraintName("exercise_language_fk_exercise_version_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.WrittenLanguage", "FkWrittenLanguage")
                        .WithMany("ExerciseLanguage")
                        .HasForeignKey("FkWrittenLanguageId")
                        .HasConstraintName("exercise_language_fk_written_language_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExerciseHeader");

                    b.Navigation("FkExerciseVersion");

                    b.Navigation("FkWrittenLanguage");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseTag", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("ExerciseTag")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("exercise_tag_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Tag", "FkTag")
                        .WithMany("ExerciseTag")
                        .HasForeignKey("FkTagId")
                        .HasConstraintName("exercise_tag_fk_tag_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExercise");

                    b.Navigation("FkTag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseVersion", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("ExerciseVersion")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("exercise_version_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("ExerciseVersion")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("exercise_version_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExercise");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Rating", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.Exercise", "FkExercise")
                        .WithMany("Rating")
                        .HasForeignKey("FkExerciseId")
                        .HasConstraintName("rating_fk_exercise_id_fkey")
                        .IsRequired();

                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.User", "FkUser")
                        .WithMany("Rating")
                        .HasForeignKey("FkUserId")
                        .HasConstraintName("rating_fk_user_id_fkey")
                        .IsRequired();

                    b.Navigation("FkExercise");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.TestCase", b =>
                {
                    b.HasOne("FHTW.CodeRunner.DataAccess.Entities.TestSuite", "FkTestSuite")
                        .WithMany("TestCase")
                        .HasForeignKey("FkTestSuiteId")
                        .HasConstraintName("test_case_fk_test_suite_id_fkey")
                        .IsRequired();

                    b.Navigation("FkTestSuite");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Collection", b =>
                {
                    b.Navigation("CollectionLanguage");

                    b.Navigation("CollectionTag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.CollectionLanguage", b =>
                {
                    b.Navigation("CollectionExercise");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Exercise", b =>
                {
                    b.Navigation("CollectionExercise");

                    b.Navigation("Comment");

                    b.Navigation("Difficulty");

                    b.Navigation("ExerciseTag");

                    b.Navigation("ExerciseVersion");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseHeader", b =>
                {
                    b.Navigation("ExerciseLanguage");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseLanguage", b =>
                {
                    b.Navigation("ExerciseBody");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ExerciseVersion", b =>
                {
                    b.Navigation("ExerciseLanguage");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.ProgrammingLanguage", b =>
                {
                    b.Navigation("CollectionExercise");

                    b.Navigation("ExerciseBody");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.Tag", b =>
                {
                    b.Navigation("CollectionTag");

                    b.Navigation("ExerciseTag");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.TestSuite", b =>
                {
                    b.Navigation("ExerciseBody");

                    b.Navigation("TestCase");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Collection");

                    b.Navigation("Comment");

                    b.Navigation("Difficulty");

                    b.Navigation("Exercise");

                    b.Navigation("ExerciseVersion");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("FHTW.CodeRunner.DataAccess.Entities.WrittenLanguage", b =>
                {
                    b.Navigation("CollectionExercise");

                    b.Navigation("ExerciseLanguage");
                });
#pragma warning restore 612, 618
        }
    }
}
